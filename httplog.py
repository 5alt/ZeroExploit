import config

from flask import Flask, request, render_template_string
import re
import hashlib

app = Flask(__name__)

@app.route('/pac')
def pac():
    with open('proxy.pac', 'r') as f:
        content = f.read()
    return render_template_string(content, proxy_host=config.proxy_host, proxy_port=config.proxy_port, included_host=config.included_host, excluded_host=config.excluded_host, filter_file=config.filter_file)

@app.route('/report_log')
def report_log():
    url = request.args.get('url', '')
    method = request.args.get('method', '')
    info = request.args.get('info', '')
    if url and method and info:
        h = hashlib.md5(url+method+info).hexdigest()
        config.dbconn.insert('detector', {'hash': h, 'url': url, 'method': method, 'info': info})
    return ''


@app.route('/', defaults={'path': ''})
@app.route('/<path:path>')
def catch_all(path):
    h = request.args.get('hash', '')
    host = request.headers.get('host', '').split('.')[0]
    if h and re.match(config.hash_pattern, h):
        #update database
        config.dbconn.update('payload', {'status': "vul"}, {'hash':h})
    if host and re.match(config.hash_pattern, host):
        config.dbconn.update('payload', {'status': "vul"}, {'hash':host})
    return ''

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0')