import config

from flask import Flask, request, render_template_string, send_from_directory, make_response, render_template
import re
import hashlib
import json

app = Flask(__name__)

@app.route('/pac')
def pac():
    with open('proxy.pac', 'r') as f:
        content = f.read()
    return render_template_string(content, proxy_host=config.proxy_host, proxy_port=config.proxy_port, included_host=config.included_host, excluded_host=config.excluded_host, filter_file=config.filter_file)

@app.route('/report_log', methods=['POST'])
def report_log():
    url = request.form.get('url', '')
    method = request.form.get('method', '')
    info = request.form.get('info', '')
    print url
    if url and method and info:
        #h = hashlib.md5(url+method+info).hexdigest()
        h = hashlib.md5(method+info).hexdigest()
        config.dbconn.insert('detector', {'hash': h, 'url': url, 'method': method, 'info': info})
    rst = make_response('')
    rst.headers['Access-Control-Allow-Origin'] = '*'
    return rst


@app.route('/', defaults={'path': ''})
@app.route('/<path:path>')
def catch_all(path):
    h = request.args.get('hash', '')
    host = request.headers.get('host', '').split('.')[0]
    if h and re.match(config.hash_pattern, h):
        #update database
        config.dbconn.update('payload', {'status': "vul"}, {'hash':h})
    if host and re.match(config.hash_pattern, host):
        config.dbconn.update('payload', {'status': "vul"}, {'hash':host})
    return ''

@app.route('/api/get_detector')
def get_detector():
    def process(obj):
        st = """<a href="%s" target="_blank">%s</a>"""%(obj['url'], obj['url'])
        obj['url'] = st
        obj['info'] = render_template('modal_style.html', content=obj['info'], target_hash=obj['hash'])
        return obj
    return json.dumps(map(process, config.dbconn.fetch_rows('detector', condition={'show': 1}, order="id DESC")))

@app.route('/api/del_detector')
def del_detector():
    h = request.args.get('hash', '')
    if h:
        config.dbconn.update('detector', {'show': 0}, {'hash':h})
    return ''

@app.route('/detector')
def detector():
    return send_from_directory('templates' ,'show_detect.html')


if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', ssl_context=("1_zeroexploit.5alt.me_bundle.crt", "2_zeroexploit.5alt.me.key"))